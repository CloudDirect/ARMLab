{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name for the virtual machine"
            },
            "defaultValue": "myVm"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "small",
            "allowedValues": [
                "small",
                "medium",
                "large"
            ],
            "metadata": {
                "description": "T-shirt size for the virtual machine"
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2016-Datacenter",
                "2012-R2-Datacenter",
                "2012-Datacenter",
                "2008-R2-SP1"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "14.04.5-LTS",
                "16.04-LTS",
                "17.10",
                "18.04-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "redhatOSVersion": {
            "type": "string",
            "defaultValue": "7.4",
            "allowedValues": [
                "7.4",
                "7.3",
                "6.9",
                "6.8"
            ],
            "metadata": {
                "description": "The Red Hat version for the VM. This will pick a fully patched image of this given Red Hat version."
            }
        },
        "osType": {
            "type": "string",
            "allowedValues": [
                "windows",
                "ubuntu",
                "redhat"
            ],
            "defaultValue": "windows",
            "metadata": {
                "description": "High level control for OS type"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "core",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "inside",
            "metadata": {
                "description": "Name of the subnet"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group for the virtual network"
            }
        },
        "ciOwnerTag": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Configuration Item Owner tag for the Virtual Machine."
            }
        },
        "appIDTag": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Application ID tag for the Virtual Machine."
            }
        },
        "orgIDTag": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Organisation ID tag for the Virtual Machine."
            }
        },
        "envTag": {
            "type": "string",
            "minLength": 1,
            "allowedValues": [
                "dev",
                "test",
                "prod",
                "unspecified"
            ],
            "metadata": {
                "description": "Environment tag for the Virtual Machine."
            }
        }
    },
    "variables": {
        "windowsImageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
        },
        "ubuntuImageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
        },
        "redhatImageReference": {
            "publisher": "RedHat",
            "offer": "RHEL",
            "sku": "[parameters('redhatOSVersion')]",
            "version": "latest"
        },
        "imageReference": "[variables(concat(parameters('osType'), 'ImageReference'))]",
        "smallVm": {
            "size": "Standard_DS1_v2",
            "numberOfDisks": 2,
            "diskSize": 1023
        },
        "mediumVm": {
            "size": "Standard_DS2_v2",
            "numberOfDisks": 2,
            "diskSize": 1023
        },
        "largeVm": {
            "size": "Standard_DS4_v2",
            "numberOfDisks": 2,
            "diskSize": 1023
        },
        "vm": "[variables(concat(parameters('vmSize'), 'Vm'))]",
        "pip?": "[if(empty(parameters('dnsLabelPrefix')), bool('false'), bool('true'))]",
        "pipObject": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipName'))]"
        },
        "vnetID": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "subnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('subnetName'))]",
        "nicName": "[concat(parameters('vmName'), '-nic')]",
        "pipName": "[concat(parameters('vmName'), '-pip')]",
        "pipType": "Dynamic",
        "storageAccountType": "Standard_LRS",
        "storageAccountName": "[concat('bootdiag', uniquestring(resourceGroup().id))]"
    },
    "resources": [
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "condition": "[variables('pip?')]",
            "name": "[variables('pipName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('pipType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "ciOwner": "[parameters('ciOwnerTag')]",
                "appID": "[parameters('appIDTag')]",
                "orgID": "[parameters('orgIDTag')]",
                "env": "[parameters('envTag')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('pipName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if(variables('pip?'), variables('pipObject'), json('null'))]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "tags": {
                "ciOwner": "[parameters('ciOwnerTag')]",
                "appID": "[parameters('appIDTag')]",
                "orgID": "[parameters('orgIDTag')]",
                "env": "[parameters('envTag')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vm').size]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('vmName'), '-osDisk')]",
                        "createOption": "FromImage"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[variables('vm').numberOfDisks]",
                            "input": {
                                "name": "[concat(parameters('vmName'), '-dataDisk', padLeft(copyIndex('dataDisks'), 2, '0'))]",
                                "lun": "[copyIndex('dataDisks')]",
                                "createOption": "Empty",
                                "diskSizeGB": "[variables('vm').diskSize]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "vm": {
            "type": "object",
            "value": "[variables('vm')]"
        },
        "image": {
            "type": "object",
            "value": "[variables('imageReference')]"
        }
    }
}